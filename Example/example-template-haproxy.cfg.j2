global
        description Frontend APPS
        maxconn 20048
        tune.ssl.default-dh-param 2048
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
        daemon
	# Default SSL material locations
        ca-base /etc/ssl/certs
       	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	# https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
        option forwardfor
        option http-server-close
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  30000
        timeout server  30000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


#---------------------#
# internal statistics #
#---------------------#
listen stats
    description Internal Statspage
    bind *:8998
    mode http
    stats hide-version
    stats auth Admin:password
    stats enable
    stats realm Haproxy\ Statistics
    stats refresh 20s
    stats uri /ha-stats
    stats show-desc
    stats show-legends
    stats show-node
    stats admin if TRUE

#----------------------------#
#  frontend Insecure http    #
#----------------------------#
frontend insecure-http
    description  Listen request on http and redirect to https
    mode  http
    option forwardfor
    option http-server-close
    bind        *:80
    bind        *:443 ssl crt  /etc/haproxy/certs/file.pem
    log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ %{+Q}r\ ssl_version:%sslv\ ssl_cipher:%sslc
    # set ip addr the client
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    # Forwarded ip of client
    reqadd X-Forwarded-Proto:\ https
    # for Clickjacking
    rspadd X-Frame-Options:\ SAMEORIGIN
    # prevent browser from using non-secure
    rspadd Strict-Transport-Security:\ max-age=15768000
    # Redirect http to https
    redirect    scheme https code 301 if !{ ssl_fc }

####################################################
#   ACL RULES FOR SERVERS AND BACKENDS             #
####################################################

    # Select a Challenge
    acl letsencrypt_acl  path_beg /.well-known/acme-challenge/
    # Use the challenge backend if the challenge is set
    use_backend letsencrypt-backend if letsencrypt_acl

    # acl for web prueba
    acl acl_{{ backend }} hdr_beg(host) -i {{ server }}
    use_backend {{ backend }} if acl_{{ backend }}


#----------------------------#
# All backend for instances  #
#----------------------------#

backend {{ backend }}
    description Test app
    mode http
    redirect scheme https if !{ ssl_fc }
    server {{ server }}  {{ privateip }}:80 cookie app check inter 3000


###############################################
##### Only for Request SSL to Letsencrypt #####
###############################################
         ##########################
         ##### Don't Remove #######
         ##########################

backend   letsencrypt-backend
   description Backend only for challenge ssl
   server  letsencrypt 127.0.0.1:8080
